#!/usr/bin/env bash

### *************** PRE-REQUESITES **************************** ###
# EBS volume attached on /dev/sdf (currently 100GB)
#  Note: this ended being attached as xvdf, NOT sdf.
# 1. Attach volume via AWS Console (and REBOOT)
#   1.1 If the volume is new, will have to format it:
#    sudo mkfs.ext3 /dev/sdf
# 2. Go to instance and mount a file system on it /dokkumento/data
#  2.1 sudo mkdir -p /dokkumento/data
#  2.2 sudo mount /dev/sdf  /dokkumento/data/
# 3. Add entry to fstab to make sure volume gets mounted on reboot
# /dev/xvdf /dokkumento/data/  ext3  noatime,nodiratime  0   0
#
# 4. Generate an RSA key and register the public key on
#    Assembla.com.
#  $ ssh-keygen -t rsa
#  $ chmod 700 id_rsa
# 5. Associate Elastic IP address with instance
#
# Notes on generating SSL request
# http://nginx.groups.wuyasea.com/articles/how-to-setup-godaddy-ssl-certificate-on-nginx/2
#
### *********************************************************** ###


# install libxml2-dev, which will be needed later
sudo apt-get install libxml2-dev -y
sudo apt-get install libxslt-dev -y

# Add the MongoDB sources to the /etc/apt/sources.list
echo "deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen" | sudo tee -a /etc/apt/sources.list


#--------------------------------------------------------------------
# Install MongoDB
# http://docs.mongodb.org/manual/tutorial/install-mongodb-on-ubuntu/
#--------------------------------------------------------------------
echo "WARNING: We are installing a older version of MongoDB. This is 2.0.x series. There are newer versions including 2.4 with beta support for text search"
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv 7F0CEB10
sudo apt-get update
sudo apt-get install mongodb-org=2.6.4 mongodb-org-server=2.6.4 mongodb-org-shell=2.6.4 mongodb-org-mongos=2.6.4 mongodb-org-tools=2.6.4

#------------------------------------------------------------------
# Install build essentials
#------------------------------------------------------------------
sudo apt-get install build-essential git-core  -y
sudo apt-get install curl -y


## TODO: follow instructions in the link above to configure mongo
## to store/read data from the EBS volume once attached to the
## instance.
## <sed> tutorial http://www.grymoire.com/Unix/Sed.html#uh-1

sudo service mongodb stop
sudo mkdir -p /dokkumento/data
sudo chown -R mongodb:mongodb /dokkumento/data/

# replace the dbpath (the entire line) with dbpath=/dokkumento/data
sed 's/dbpath=.*/dbpath=\/dokkumento\/data/' < /etc/mongodb.conf  > ~/mongodb.conf
sudo cp ~/mongodb.conf /etc/

sudo service mongodb start

#--------------------------------------------------------------------
# Install nginx
#--------------------------------------------------------------------
sudo apt-get install nginx -y

#-------------------------------------------------------------------
# Package required for PDF generation - USED BY PDFKIT
# WARNING: the standard apt-get installation for this
# package doesn't work because it assumes that an X11
# server is installed. Instead, I found these instructions to
# work on Ubuntu server
#------------------------------------------------------------------
# sudo apt-get install wkhtmltopdf
mkdir -p ~/downloads/wkhtmltopdf
cd ~/downloads/wkhtmltopdf
sudo curl -C - -O http://wkhtmltopdf.googlecode.com/files/wkhtmltopdf-0.9.9-static-amd64.tar.bz2
sudo tar -xvjf wkhtmltopdf-0.9.9-static-amd64.tar.bz2
sudo mv wkhtmltopdf-amd64 /usr/bin/wkhtmltopdf
sudo chmod +x /usr/bib/wkhtmltopdf

# -------------------------------------------------------------------
# The following packages are required by the [docsplit] gem
#--------------------------------------------------------------------
# Install GraphicsMagick
sudo apt-get install graphicsmagick -y


# install ghostrscript
sudo apt-get install ghostscript -y

# install poppler
sudo apt-get install poppler-utils -y
sudo apt-get install poppler-data -y

# install leptonica library (required by tesseract)
sudo apt-get install libpng12-dev -y
sudo apt-get install libjpeg62-dev -y
sudo apt-get install libtiff4-dev -y
sudo apt-get install zlib1g-dev -y

# Updated the version of leptonica from 1.68 to 1.70 because
# tesseract was faulting on text extraction from TIFF images.
# On a google group chat i came across a comment that newer
# version might cure the problem.
mkdir -p ~/downloads/leptonica
cd ~/downloads/leptonica
wget http://leptonica.org/source/leptonica-1.70.tar.gz
tar -zxvf leptonica-1.70.tar.gz
cd leptonica-1.70
./configure
make
sudo make install
sudo ldconfig

# install tesseract
sudo apt-get install automake -y
sudo apt-get install libtool -y

mkdir -p ~/downloads/tesseract3.02
cd ~/downloads/tesseract3.02
wget http://tesseract-ocr.googlecode.com/files/tesseract-3.02.02.tar.gz
tar zxvf tesseract-3.02.02.tar.gz
cd tesseract-3.02.02
./autogen.sh
./configure
make
sudo make install
sudo ldconfig
wget http://tesseract-ocr.googlecode.com/files/eng.traineddata.gz
gzip -d eng.traineddata.gz
sudo mv eng.traineddata /usr/local/share/tessdata/

# install pdftk
sudo apt-get install pdftk -y

# install openoffice
sudo apt-get install openoffice.org openoffice.org-java-common -y

#--------------------------------------------------------------------
#  ImageMagick is used by the CarrierWave::MiniMagick gem which is
#  used and install by the ckeditor gem.
#--------------------------------------------------------------------
sudo apt-get install imagemagick

#--------------------------------------------------------------------
# install libcurl which is required by the CURB gem used by
# the Feedzirra gem.
#--------------------------------------------------------------------
sudo apt-get install libcurl3 libcurl3-gnutls libcurl4-openssl-dev -y

##**********************************##
##*** UP TO HERE HAS BEEN TESTED ***##
##**********************************##

#--------------------------------------------------------------------
# install solr, which requires openjdk-6
# Follow the direction from the following link to install, configure
# and provisiogn Solr with Jetty.
#
# http://kingstonlabs.blogspot.com/2012/06/installing-solr-36-on-ubuntu-1204.html
#--------------------------------------------------------------------
sudo apt-get install openjdk-7-jdk -y
sudo apt-get install jetty -y
sudo apt-get install libjetty-extra -y
sudo apt-get install unzip -y


mkdir -p ~/downloads/solr
cd ~/downloads/solr
wget  http://archive.apache.org/dist/lucene/solr/4.7.0/solr-4.7.0.tgz
tar -xzvf solr-4.7.0.tgz
sudo mkdir /usr/share/solr
cd /usr/share/solr
sudo unzip ~/downloads/solr/solr-4.7.0/dist/solr-4.7.0.war
sudo ln -s /usr/share/solr /usr/share/jetty/webapps/solr

# Copy all other JARS...
sudo cp -f  ~/downloads/solr/solr-4.7.0/dist/*.jar /usr/share/solr/WEB-INF/lib/


# copy the example jars to the jetty lib folder. this is to make sure the
# SLF4J jars are there.
sudo cp ~/downloads/solr/solr-4.7.0/example/lib/ext/*  /usr/share/jetty/lib/
sudo cp ~/downloads/solr/solr-4.7.0/example/resources/log4j.properties  /usr/share/jetty/lib/

sudo cp ~/downloads/solr/solr-4.7.0/example/lib/ext/*  /var/lib/jetty/webapps/solr/WEB-INF/lib/
sudo cp ~/downloads/solr/solr-4.7.0/example/resources/log4j.properties   /var/lib/jetty/webapps/solr/WEB-INF/lib/

#*****************************************************************
# configure jetty
# WARNING: The NO_START flag is already in the file. Not sure about
# the effect of having a duplicate. WHY not just remove it from
# here??? Need to make sure the entry is there.
#*****************************************************************
echo "NO_START=0" | sudo tee -a /etc/default/jetty
echo "JETTY_HOST=127.0.0.1" | sudo tee -a /etc/default/jetty
echo "JAVA_OPTIONS=\"-Dsolr.solr.home=/usr/share/solr \$JAVA_OPTIONS\" " | sudo tee -a /etc/default/jetty
echo "JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64" | sudo tee -a /etc/default/jetty

# create cores file
echo "" | sudo tee -a /usr/share/solr/solr.xml
echo "<solr persistent=\"true\">" | sudo tee -a /usr/share/solr/solr.xml
echo " <cores adminPath=\"/admin/cores\">" | sudo tee -a /usr/share/solr/solr.xml
echo "   <core name=\"dokkumento\" instanceDir=\"dokkumento\" dataDir=\"/dokkumento/solr/data\" />" | sudo tee -a /usr/share/solr/solr.xml
echo " </cores> "  | sudo tee -a /usr/share/solr/solr.xml
echo "</solr>"  | sudo tee -a /usr/share/solr/solr.xml


#**************************************************************
# Install the simple java logging jar
#*************************************************************
#cd /usr/share/jetty/etc/
#sudo wget http://www.slf4j.org/dist/slf4j-1.7.5.tar.gz
#sudo tar -xzvf slf4j-1.7.5.tar.gz
#sudo cp slf4j-1.7.5/slf4j-simple-1.7.5.jar .

#cd /usr/share/jetty/webapps/solr/WEB-INF/lib
#sudo cp /usr/share/jetty/etc/slf4j-1.7.5/slf4j-simple-1.7.5.jar .
#sudo ln -s /usr/share/java/slf4j-simple-1.7.5.jar /usr/share/jetty/webapps/solr/WEB-INF/lib/slf4j-simple.jar

##**********************************##
##*** UP TO HERE HAS BEEN TESTED ***##
##**********************************##

# Create the data directory for solr
sudo mkdir -p /dokkumento/solr/data

sudo mkdir -p /var/lib/solr/
sudo mkdir -p /usr/share/solr/dokkumento/

sudo chown -R jetty:jetty /var/lib/solr/
sudo chown -R jetty:jetty /usr/share/solr
sudo chown -R jetty:jetty /dokkumento/solr/data

# add the ubuntu user to the jetty group...
sudo usermod -a -G jetty ubuntu
# then, assign rwx to jetty (user), rwx to group (jetty, which now includes ubuntu), and leave everyone at r+x
# Refresher Read=4, Write=2, Execute=1, so that rwx = 4 + 2 + 1 = (7) and rx = 4 + 1 = (5). And, in case you
# forgot, the order of permission on a file is User-Group-Everyone.
sudo chmod 775 /usr/share/solr/dokkumento/

# This is the configuration directory for dokkumento, not where the data is stored
# We need to copy the solr/conf configuration (from git) to this location)
# as opposed to copying it from the temporary ~/download directory as being
# done in the following step.
sudo mkdir -p /usr/share/solr/dokkumento
sudo chown -R jetty:jetty /usr/share/solr/dokkumento

##********************************************************
## Install RVM
##********************************************************

#bash -s stable < <(curl -s https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer)
curl -L https://get.rvm.io | bash -s stable --autolibs=enabled --auto-dotfiles
echo "$HOME/.rvm/bin" >> ~/.bashrc
source ~/.bashrc

#echo '[[ -s "/home/vagrant/.rvm/scripts/rvm" ]] && source "/home/vagrant/.rvm/scripts/rvm"' >> ~/.bashrc
# source /etc/profile.d/rvm.sh

#-------------- IMPORTANT ------------------------------------------------------------------
#...this where rails and ruby were installed priot to separating the script to deal with
# the problem of 'rvm not a function' because the shell is not loading it.
#-------------------------------------------------------------------------------------------
# SEE THE provision_ruby_rails script


# prepare the rails deployment folder with ownership permission for user 'ubuntu'
sudo mkdir -p /dokkumento/www
sudo chown -R ubuntu:ubuntu /dokkumento/www

sudo mkdir -p /dokkumento/www/dokkweb
sudo chown -R ubuntu:ubuntu /dokkumento/www/dokkweb

sudo mkdir -p /dokkumento/www/dokkweb/shared
sudo chown -R ubuntu:ubuntu /dokkumento/www/dokkweb/shared

# prepare the solr configuration deployment folder
sudo mkdir -p /dokkumento/solr/conf
sudo chown -R ubuntu:ubuntu /dokkumento/solr/conf

# prepare the nginx configuration deployment folder
sudo mkdir -p /dokkumento/nginx
sudo chown -R ubuntu:ubuntu /dokkumento/nginx

sudo mkdir -p /dokkumento/www/ssl
sudo chown -R ubuntu:ubuntu /dokkumento/www/ssl

sudo mkdir -p /dokkumento/jobs/dokk_dropbox_processor
sudo chown -R ubuntu:ubuntu /dokkumento/jobs/dokk_dropbox_processor


##***********************************************************************************
## TODO: The configuration files need to come from the application /solr/conf/ folder
## we might have to defer the following step (restarting jetty) because the required
## files will not be there yet.
##***********************************************************************************
# sudo cp -r ~/downloads/solr/solr-4.1.0/example/solr/conf /usr/share/solr/dokkumento/

# restart jetty to enable features
sudo /etc/init.d/jetty restart


##***********************************************************************************
## Configure thin (will not be runnable until the bundler installs thin from the
## the Rails app's Gemfile).UPDATE: This just ensure the folder exists. The
## Capistrano config/deploy.rb script will take care of copying the config file
## to this location.
##***********************************************************************************
sudo mkdir -p /etc/thin
sudo chown -R ubuntu:ubuntu /etc/thin

sudo mkdir -p /dokkumento/www/dokkweb/shared/pids
sudo chown -R ubuntu:ubuntu  /dokkumento/www/dokkweb/shared/pids

##***********************************************************************************
## Prepare the asset_store shared folder
##***********************************************************************************
sudo mkdir -p /dokkumento/www/dokkweb/shared/asset_store
sudo chown -R ubuntu:ubuntu /dokkumento/www/dokkweb/shared/asset_store

##***********************************************************************************
## Create directories for the symmetric-encryption gem's key files
##***********************************************************************************
sudo mkdir -p /dokkumento/www/rails/symmetric-keys
sudo chown -R ubuntu:ubuntu /dokkumento/www/rails/symmetric-keys

sudo mkdir -p /dokkumento/www/dokkweb/shared/log
sudo chown -R ubuntu:ubuntu /dokkumento/www/dokkweb/shared/log

sudo mkdir -p /dokkumento/www/dokkweb/releases
sudo chown -R ubuntu:ubuntu /dokkumento/www/dokkweb/releases/

##***********************************************************************************
## Generate the deployer key for github and assembla
##***********************************************************************************
cd /home/vagrant/.ssh
ssh-keygen -t rsa -C "ernie.deferia@gmail.com"  -N '' -f id_rsa
echo "----------------------------------------------------------------"
echo " Copy the entire text that follows this comment and associate  "
echo " it with the repository on GitHub and/or Assembla "
echo "----------------------------------------------------------------"
cat id_rsa.pub

echo "----------------------------------------------------------------"
echo " IMPORTANT:"
echo ""
echo " The installation of Solr on Jetty has proven a bit mercurial."
echo " For example, version 4.6.0 of Solr does not integrate the "
echo " SLF4J jars in its WAR, so one must copy them directly from "
echo " example directory under the downloaded *.gz file."
echo " "
echo " IF dokkumento fails to connect to Solr, the following log files"
echo " must be checked: "
echo "/usr/share/jetty/logs"
echo ""
echo "After correcting any issues found there (good luck!), the jetty"
echo "server must restarted. This is done as follows: "
echo ""
echo "$ sudo /etc/init.d/jetty restart"
echo ""
echo "If the problems persist, you can use the following source of "
echo "information to address SLF4j issues:"
echo ""
echo "http://wiki.apache.org/solr/SolrLogging"
echo ""
echo "You can also use CURL on the instance to check the functioning"
echo "of Solr:"
echo ""
echo "curl http://localhost:8080/solr/dokkumento/"
echo ""
echo "This should not return any errors, but only after the deployment"
echo "has been done, since the configuration files are deployed by"
echo "the Capistrano script."
echo ""
echo "----------------------------------------------------------------"
